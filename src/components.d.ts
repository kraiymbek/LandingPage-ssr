/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';


export namespace Components {

  interface AppHeader {}
  interface AppHeaderAttributes extends StencilHTMLAttributes {}

  interface AppRoot {}
  interface AppRootAttributes extends StencilHTMLAttributes {}

  interface CarouselComponent {}
  interface CarouselComponentAttributes extends StencilHTMLAttributes {}

  interface ContactsComponent {}
  interface ContactsComponentAttributes extends StencilHTMLAttributes {}

  interface OpportunityItem {
    'listItem': any;
  }
  interface OpportunityItemAttributes extends StencilHTMLAttributes {
    'listItem'?: any;
  }

  interface OpportunityList {}
  interface OpportunityListAttributes extends StencilHTMLAttributes {}

  interface ParallaxComponent {}
  interface ParallaxComponentAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'AppHeader': Components.AppHeader;
    'AppRoot': Components.AppRoot;
    'CarouselComponent': Components.CarouselComponent;
    'ContactsComponent': Components.ContactsComponent;
    'OpportunityItem': Components.OpportunityItem;
    'OpportunityList': Components.OpportunityList;
    'ParallaxComponent': Components.ParallaxComponent;
  }

  interface StencilIntrinsicElements {
    'app-header': Components.AppHeaderAttributes;
    'app-root': Components.AppRootAttributes;
    'carousel-component': Components.CarouselComponentAttributes;
    'contacts-component': Components.ContactsComponentAttributes;
    'opportunity-item': Components.OpportunityItemAttributes;
    'opportunity-list': Components.OpportunityListAttributes;
    'parallax-component': Components.ParallaxComponentAttributes;
  }


  interface HTMLAppHeaderElement extends Components.AppHeader, HTMLStencilElement {}
  var HTMLAppHeaderElement: {
    prototype: HTMLAppHeaderElement;
    new (): HTMLAppHeaderElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLCarouselComponentElement extends Components.CarouselComponent, HTMLStencilElement {}
  var HTMLCarouselComponentElement: {
    prototype: HTMLCarouselComponentElement;
    new (): HTMLCarouselComponentElement;
  };

  interface HTMLContactsComponentElement extends Components.ContactsComponent, HTMLStencilElement {}
  var HTMLContactsComponentElement: {
    prototype: HTMLContactsComponentElement;
    new (): HTMLContactsComponentElement;
  };

  interface HTMLOpportunityItemElement extends Components.OpportunityItem, HTMLStencilElement {}
  var HTMLOpportunityItemElement: {
    prototype: HTMLOpportunityItemElement;
    new (): HTMLOpportunityItemElement;
  };

  interface HTMLOpportunityListElement extends Components.OpportunityList, HTMLStencilElement {}
  var HTMLOpportunityListElement: {
    prototype: HTMLOpportunityListElement;
    new (): HTMLOpportunityListElement;
  };

  interface HTMLParallaxComponentElement extends Components.ParallaxComponent, HTMLStencilElement {}
  var HTMLParallaxComponentElement: {
    prototype: HTMLParallaxComponentElement;
    new (): HTMLParallaxComponentElement;
  };

  interface HTMLElementTagNameMap {
    'app-header': HTMLAppHeaderElement
    'app-root': HTMLAppRootElement
    'carousel-component': HTMLCarouselComponentElement
    'contacts-component': HTMLContactsComponentElement
    'opportunity-item': HTMLOpportunityItemElement
    'opportunity-list': HTMLOpportunityListElement
    'parallax-component': HTMLParallaxComponentElement
  }

  interface ElementTagNameMap {
    'app-header': HTMLAppHeaderElement;
    'app-root': HTMLAppRootElement;
    'carousel-component': HTMLCarouselComponentElement;
    'contacts-component': HTMLContactsComponentElement;
    'opportunity-item': HTMLOpportunityItemElement;
    'opportunity-list': HTMLOpportunityListElement;
    'parallax-component': HTMLParallaxComponentElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
